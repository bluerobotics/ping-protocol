sudo: false
language: cpp
matrix:
  include:
    - os: linux
      dist: xenial
      sudo: require
      addons:
        apt:
          sources:
            - sourceline: "ppa:deadsnakes/ppa"
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - python3.6
            - g++-7
      env:
        - DESC="Check json and protocol"
        - TEST="true"
        - PYTHON=3.6
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QTV="qt511"

    - os: linux
      dist: trusty
      sudo: require
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-7
      env:
        - DESC="AppImage deploy Qt59"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QTV="qt59"

    - os: linux
      dist: xenial
      sudo: require
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-7
      env:
        - DESC="AppImage deploy Qt511"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QTV="qt511"

    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env:
        - DESC="dmg deploy"
        - MATRIX_EVAL="COMPILER=clang++"

install:
- if [ ! -z $TEST ]; then
    cd src/protocol/templates;
    echo "CHECK JSON";
    python3.6 -m json.tool ping_protocol.json >> temp.json;
    echo "CHECK JSON STYLE";
    comm -2 -3 ping_protocol.json temp.json;
    echo "CHECK JSON DOCUMENTATION";
    cd ..;
    pip install --user --upgrade pip;
    pip install --user jinja2;
    python generate-doc.py;
    cmp ping-doc.md ../../README.md;
  fi
- pip install --user --upgrade pip;
- pip install --user jinja2;
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    if [ "${QTV}" = "qt59" ]; then
      sudo add-apt-repository --yes ppa:beineri/opt-qt594-trusty;
    else
      sudo add-apt-repository --yes ppa:beineri/opt-qt-5.11.1-xenial;
    fi;
    sudo apt update -qq;
    sudo apt install build-essential ${QTV}charts-no-lgpl
    ${QTV}quickcontrols ${QTV}quickcontrols2 ${QTV}serialport
    ${QTV}graphicaleffects ${QTV}svg ${QTV}scxml git;
    if [ "${QTV}" = "qt59" ]; then
      sudo apt install ${QTV}-meta-minimal;
    else
      sudo apt install ${QTV}base libgl1-mesa-dev;
    fi;
  fi
- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    brew update > /dev/null;
    brew install qt5;
    chmod -R 755 /usr/local/opt/qt5/*;
    export QTDIR="/usr/local/opt/qt5";
    export PATH="$QTDIR/bin:$PATH";
  fi

script:
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 60;
  fi
- if [ ! -z $TEST ]; then
    source /opt/qt*/bin/qt*-env.sh;
    export TEST="true";
    cd ../../;
    pwd;
    ls;
    echo "Test cpp protocol!";
    cd test;
    mkdir build && cd build;
    qmake ..;
    make;
    ./test;
  fi
- if [[ "${TRAVIS_OS_NAME}" = "linux" && -z $TEST ]]; then
    source /opt/qt*/bin/qt*-env.sh;
  fi
- if [ -z $TEST ]; then
    cd example;
    mkdir build;
    cd build;
    qmake .. -Wall -Wlogic -Wparser;
    make;
  fi